# Nginx configuration for AppFlowy-Cloud
# Modified for use outside Docker container

events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
       default upgrade;
       ''      close;
    }

    # Define allowed origins for CORS
    map $http_origin $cors_allow_origin {
        default "";
        "http://localhost:8000" $http_origin;
        "http://127.0.0.1:8000" $http_origin;
        # Add more allowed origins as needed
    }

    # Block direct IP access
    server {
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private_key.key;
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        # Return a 403 Forbidden error if accessed via IP
        return 403;
    }

    # Main server block
    server {
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private_key.key;

        listen 80;
        listen 443 ssl;
        server_name flowy.example.com;
        client_max_body_size 10M;

        underscores_in_headers on;

        # GoTrue
        location /gotrue/ {
            if ($request_method = 'HEAD') {
                return 444;
            }

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Headers' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain charset=UTF-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }

            proxy_pass http://127.0.0.1:9999;

            rewrite ^/gotrue(/.*)$ $1 break;

            proxy_set_header Host $http_host;
            proxy_pass_request_headers on;
        }

        # WebSocket
        location /ws {
            proxy_pass http://127.0.0.1:8000;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 86400;
        }

        # AppFlowy-Cloud
        location = /api/options {
            add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Client-Version' always;
            add_header 'Access-Control-Max-Age' 3600 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        location /api/chat {
            proxy_pass http://127.0.0.1:8000;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding on;
            proxy_buffering off;
            proxy_cache off;

            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }

        location /api/import {
            proxy_pass http://127.0.0.1:8000;

            proxy_set_header X-Request-Id $request_id;
            proxy_set_header Host $http_host;

            add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept' always;
            add_header 'Access-Control-Max-Age' 3600 always;

            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;

            proxy_request_buffering off;
        }

        location /api {
            proxy_pass http://127.0.0.1:8000;

            proxy_set_header X-Request-Id $request_id;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Client-Version' always;
            add_header 'Access-Control-Max-Age' 3600 always;

            location /api/import {
                client_max_body_size 2G;
            }

            location ~* ^/api/workspace/([a-zA-Z0-9_-]+)/publish$ {
                proxy_pass http://127.0.0.1:8000;
                proxy_request_buffering off;
                client_max_body_size 256M;
            }
        }

        # AppFlowy AI
        location /ai {
            proxy_pass http://127.0.0.1:5001;
            proxy_set_header Host $host;
            proxy_pass_request_headers on;
        }

        # Minio Web UI
#        location /minio/ {
#            proxy_pass http://127.0.0.1:9001;
#
#            rewrite ^/minio/(.*) /$1 break;
#            proxy_set_header Host $http_host;
#            proxy_set_header X-Real-IP $remote_addr;
#            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header X-Forwarded-Proto $scheme;
#            proxy_set_header X-NginX-Proxy true;

#            real_ip_header X-Real-IP;

#            proxy_connect_timeout 300;

#            proxy_http_version 1.1;
#            proxy_set_header Upgrade $http_upgrade;
#            proxy_set_header Connection "upgrade";

#            chunked_transfer_encoding off;
#        }

        # PgAdmin
#        location /pgadmin/ {
#            proxy_pass http://127.0.0.1:80;

#            proxy_set_header X-Script-Name /pgadmin;
#            proxy_set_header X-Scheme $scheme;
#            proxy_set_header Host $host;
#            proxy_redirect off;
#        }

        # Portainer
#        location /portainer/ {
#            proxy_pass http://127.0.0.1:9000;

#            rewrite ^/portainer/(.*) /$1 break;
#        }

        # Admin Frontend
        location / {
            proxy_pass http://127.0.0.1:3000;

            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
        }
    }
}
